# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

name: "Continuous Integration"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Cache tools installed with phive"
        uses: actions/cache@v2
        with:
          path: |
            ~~/.phive
            ./tools
          key: ${{ runner.os }}-phive-cache-${{ hashFiles('**/.phive/phars.xml') }}
          restore-keys: |
            phive-cache-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          extensions: mbstring, xml, ctype, iconv
          coverage: none
          tools: phive

      - name: "Install tools with phive"
        run: make tools-install

      - name: "Check cs"
        run: make php-cs-check

  static-code-analysis-phpstan:
    name: "Static Code Analysis by PHPStan"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Cache tools installed with phive"
        uses: actions/cache@v2
        with:
          path: |
            ~~/.phive
            ./tools
          key: ${{ runner.os }}-phive-cache-${{ hashFiles('**/.phive/phars.xml') }}
          restore-keys: |
            phive-cache-

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-cache-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          extensions: mbstring, xml, ctype, iconv
          coverage: none
          tools: phive

      - name: "Install tools with phive"
        run: make tools-install

      - name: "Install dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest --optimize-autoloader

      - name: PHPStan
        run: make phpstan

  static-code-analysis-psalm:
    name: "Static Code Analysis by Psalm"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Cache tools installed with phive"
        uses: actions/cache@v2
        with:
          path: |
            ~~/.phive
            ./tools
          key: ${{ runner.os }}-phive-cache-${{ hashFiles('**/.phive/phars.xml') }}
          restore-keys: |
            phive-cache-

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-cache-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          extensions: mbstring, xml, ctype, iconv
          coverage: none
          tools: phive

      - name: "Install tools with phive"
        run: make tools-install

      - name: "Install dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest --optimize-autoloader

      - name: Psalm
        run: make psalm

  tests:
    name: "PHP ${{ matrix.php-versions }} Test"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ["7.2", "7.3", "7.4"]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Cache tools installed with phive"
        uses: actions/cache@v2
        with:
          path: |
            ~~/.phive
            ./tools
          key: ${{ runner.os }}-phive-cache-${{ hashFiles('**/.phive/phars.xml') }}
          restore-keys: |
            phive-cache-

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-cache-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv
          coverage: none
          tools: phive

      - name: "Install tools with phive"
        run: make tools-install

      - name: "Run tests"
        run: make tests

  build:
    name: "Build"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Cache tools installed with phive"
        uses: actions/cache@v2
        with:
          path: |
            ~~/.phive
            ./tools
          key: ${{ runner.os }}-phive-cache-${{ hashFiles('**/.phive/phars.xml') }}
          restore-keys: |
            phive-cache-

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-cache-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.2"
          extensions: mbstring, xml, ctype, iconv
          ini-values: phar.readonly=0
          coverage: none
          tools: phive

      - name: "Install tools with phive"
        run: make tools-install

      - name: "Install dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest --optimize-autoloader

      - name: "Compile deptrac phar"
        run: ./tools/box compile

      - name: "Run deptrac phar without cache"
        run: php deptrac.phar analyze examples/Fixture.depfile.yaml --no-cache

      - name: "Cache file should not exist"
        run: "[ ! -f '.deptrac.cache' ]"

      - name: "Run deptrac phar with cache enabled"
        run: php deptrac.phar analyze examples/Fixture.depfile.yaml

      - name: "Cache file should exist"
        run: "[ -f '.deptrac.cache' ]"

      - name: "Run deptrac phar again with cache enabled to be sure the cache file could be reused"
        run: php deptrac.phar analyze examples/Fixture.depfile.yaml

      - name: "Run deptrac phar with custom cache file output"
        run: php deptrac.phar analyze examples/Fixture.depfile.yaml --cache-file=.deptrac.cache2

      - name: "Custom cache file should exist"
        run: "[ -f '.deptrac.cache2' ]"

      - name: "Run deptrac phar with --fail-on-uncovered"
        run: sh .github/workflows/test-flag-fail-on-uncovered.sh

      - name: "Upload phar file artifact"
        uses: actions/upload-artifact@v2
        with:
          name: deptrac.phar
          path: deptrac.phar
